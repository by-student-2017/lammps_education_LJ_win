# particle packing by insertion and successive growing of particles

atom_style granular
atom_modify map array
boundary p f f
newton off

communicate single vel yes

units si

region reg block -1e-5 3.0001e-3 -0.05001e-3 8e-4 -1e-8 3.0001e-3 units box
region inbox block 0 3e-3 0 7.5e-4 0 3e-3 units box
region leftwall block 1e-8 2.999e-3 7.5e-4 8e-4 1e-8 2.999e3 units box
region rightwall block 1e-8 2.999e-3 -0.049e-3e-3 0. 1e-8 2.999e-3 units box

create_box 1 reg

neighbor 0.0005 bin
neigh_modify delay 0

#Material properties required for new pair styles
fix m1 all property/global youngsModulus peratomtype 7.e10
fix m2 all property/global poissonsRatio peratomtype 0.20 
fix m3 all property/global coefficientRestitution peratomtypepair 1 0.3
fix m4 all property/global coefficientFriction peratomtypepair 1 0.5
fix m5 all property/global coefficientRollingFriction peratomtypepair 1 0

#New pair style
pair_style gran/hertz/history 3 0 #Hertzian without cohesion
pair_coeff * *

fix ywall all wall/gran/hertz/history 1 0 yplane 0 8e-4 1
fix barrier all wall/gran/hertz/history 1 0 yplane 0. 7.5e-4 1
fix xwall all wall/gran/hertz/history 1 0 xplane -1e-5 3.0001e-3 1
fix zwall all wall/gran/hertz/history 1 0 zplane 0 NULL 1
fix zwall_out all wall/gran/hertz/history 1 0 zplane NULL 3.0001e-3 1

timestep 1e-9

fix ts_check all check/timestep/gran 1000 0.2 0.2

#distributions for insertion
fix pts1 all particletemplate/sphere 132 atom_type 1 density constant 2650 radius constant 1e-4
fix pts2 all particletemplate/sphere 132 atom_type 1 density constant 2650 radius constant 5e-5
fix pdd1 all particledistribution/discrete 1239 2 pts1 1.0 pts2 0.0 
fix pdd2 all particledistribution/discrete 1239 2 pts1 0. pts2 1.0

#parameters for gradually growing particle diameter
variable alphastart equal 0.40
variable alphatarget equal 0.65
variable growts equal 350000
variable growevery equal 40
variable relaxts equal 250000

#region and insertion
group nve_group region reg
fix ins nve_group pour/dev/packing 1 distributiontemplate pdd1 vol ${alphastart} 200 region inbox

#apply nve integration to all particles that are inserted as single particles
fix integr nve_group nve/sphere

#output settings, include total thermal energy
compute 1 all erotate/sphere
thermo_style custom step atoms ke c_1 vol
thermo 100000
thermo_modify lost ignore norm no
compute_modify thermo_temp dynamic yes
print "Inserting Proppant Pack"
#insert the first particles
run 1

#dump dmp_paraview all custom 4000 ./post/dump_forces_limited_var_7.5e-4_1e03_*.liggghts id type type x y z ix iy iz vx vy vz fx fy fz omegax omegay omegaz radius
unfix ins
#undump dumpstl

#calculate grow rate
variable Rgrowrate equal (${alphatarget}/${alphastart})^(${growevery}/(3.*${growts}))
print "The radius grow rate is ${Rgrowrate}"

#do the diameter grow
compute rad all property/atom radius

variable d_grown atom ${Rgrowrate}*2.*c_rad
fix grow nve_group adapt ${growevery} atom diameter d_grown
neigh_modify every ${growevery} check no

neighbor 0.000005 bin

#run
run ${growts}

#let the packing relax
unfix grow

neigh_modify check yes

run ${relaxts}

variable pack equal ${growts}+${relaxts}

print "Creating Fracture Walls"

neighbor 0.0005 bin

lattice sc 5e-5
create_atoms 1 region leftwall units box
group leftwall_group region leftwall
set group leftwall_group diameter 5e-5 density 2650

create_atoms 1 region rightwall units box
group rightwall_group region rightwall
set group rightwall_group diameter 5e-5 density 2650
velocity rightwall_group zero linear
fix 2 rightwall_group nve/noforce
fix 3 rightwall_group freeze

#Granular Wall
fix 1 leftwall_group rigid group 1 leftwall_group force * on on off torque * off off off
neigh_modify exclude group leftwall_group leftwall_group
neigh_modify exclude group rightwall_group rightwall_group
neigh_modify exclude group leftwall_group rightwall_group
thermo 1000
#run 100000

unfix barrier
#save data

variable massleft equal mass(nve_group,inbox)
variable totalmass equal mass(nve_group,inbox)
variable averagevelocity equal vcm(nve_group,z,reg)
variable fracturewidth equal xcm(leftwall_group,y,reg)-xcm(rightwall_group,y,reg)
variable pressureleft equal fcm(leftwall_group,y,reg)
variable pressureright equal fcm(rightwall_group,y,reg)

fix screen all print 100000 "${massleft}, ${totalmass}, &
  ${averagevelocity}, ${fracturewidth}, ${pressureleft}, ${pressureright}"
fix extra all print 4000 "${massleft}, ${totalmass}, &
  ${averagevelocity}, ${fracturewidth}, ${pressureleft}, ${pressureright}" file flowingMAXs_203.txt

#relax

run 100000

#compact

print "Compacting Proppant Pack"

fix shmin leftwall_group addforce 0.0 0 0.0

run 400000

fix damp nve_group viscous 0.189
run 200000
unfix damp

unfix zwall_out

print "Applying Fracture Flow"

fix gr nve_group addforce 0. 0. 8.6167e-3

run 1000000

label loop

print "Entering mass loop"

variable masspres equal ${massleft}

run 40000

variable deltam equal v_masspres-v_massleft

if $deltam=<0.00000001 then 
"jump in.var_width_MAXp7.5e408.6167e3 continuing"

variable masspres delete
variable deltam delete

jump in.var_width_MAXp7.5e408.6167e3 loop

label continuing

run 100000

print "Done"

