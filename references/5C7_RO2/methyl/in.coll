### Sets up a LAMMPS simulation of a collision between 2 peroxy radicals
units real
dimension 3
boundary p p p
atom_style full
bond_style      harmonic
angle_style     harmonic
dihedral_style  opls

read_data data.coll

mass 1 12.0
mass 2 1.0
mass 3 16.0
mass 4 16.0

pair_style      lj/cut/coul/cut 40.0
pair_coeff      1 1 0.066 3.5
pair_coeff	2 2 0.03  2.5
pair_coeff      3 3 0.14  2.9
pair_coeff      4 4 0.14  2.9

pair_modify mix geometric
special_bonds lj/coul 0.0 0.0 0.5

bond_coeff      1 340.0 1.09
bond_coeff      2 320.0 1.41
bond_coeff      3 469.284 1.3226

angle_coeff	1 33.0 107.8
angle_coeff     2 35.0 109.5
angle_coeff     3 85.022 110.04

dihedral_coeff  1 1.7569 0.0000 1.4746 0.0000

group mol1 molecule 1
group mol2 molecule 2

velocity mol1 create 300.0 991 dist gaussian mom yes
velocity mol2 create 300.0 636 dist gaussian mom yes

# make some temp computes to track individual molecular temps
# make a compute to track com separation of both molecules.

compute temp1 mol1 temp/com
compute temp2 mol2 temp/com
compute com1 mol1 com
compute com2 mol2 com

timestep 0.2

# equilibrate separately to make sure each has the right temp.

fix NVT1 mol1 nvt temp 300.0 300.0 10.0
fix NVT2 mol2 nvt temp 300.0 300.0 10.0

dump DATA all xyz 100 coll.xyz
dump_modify DATA element C H OS OP

variable dx equal c_com1[1]-c_com2[1]
variable dy equal c_com1[2]-c_com2[2]
variable dz equal c_com1[3]-c_com2[3]
variable dr equal v_dx^2+v_dy^2+v_dz^2

# Also want to print out c.o.m. velocity^2 of each fragment.
# (for translational KE)

variable vcm1sq equal vcm(mol1,x)^2+vcm(mol1,y)^2+vcm(mol1,z)^2
variable vcm2sq equal vcm(mol2,x)^2+vcm(mol2,y)^2+vcm(mol2,z)^2

thermo_style custom step temp c_temp1 c_temp2 v_dr v_vcm1sq v_vcm2sq pe ke etotal press

thermo 100

# equilibration

run 100000

unfix NVT1
unfix NVT2

fix NVE all nve

# add some velocity to the mol2 c.o.m.

variable vxnew atom -0.0052

velocity mol2 set v_vxnew NULL NULL sum yes

run 2000000

dump FINAL all custom 1 data.final.coll id mol type q x y z

run 1
